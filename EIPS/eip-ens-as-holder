---
eip: 5298
title: ENS as Token Holder
description: An interface for holding tokens by ENS.
author: Zainan Victor Zhou (@xinbenlv)
discussions-to: <URL>
status: Draft
type: Standards Track
category: ERC
created: 2022-07-12
requires: 137, 721, 1155
---

## Abstract
An interface for smart contract to become a holder of tokens by honoring ENS ownership.
This specification supports EIP-721 and EIP-1155 tokens and is expandable to future token standard or other standard.

## Motivation
Currently, if someone wants to receive token, they have to setup a wallet address, otherwise,
the minter or transferer will not be able to transfer or mint for that token. 

By creating smart contract that conform to this interface specification, we can decouple
the transfer of ownership from the existence of wallet addresses.

## Specification

1. Any conforming smart contract must conform to `ERC721TokenReceiver` defined in [EIP-721](./eip-721.md) and `ERC1155TokenReceiver` defined in [EIP-1155](./eip-1155.md).

```solidity
interface IERC_ENS_AS_HOLDER is ERC721Receiver, ERC1155Receiver { 
}
```

## Rationale
TBD

## Backwards Compatibility
No backward compatibility issues were found.

## Reference Implementation
```solidity
contract ENSTokenHolding is ERC721TokenReceiver, Initializable {
  address ENSRootRegistry _ensRoot;
  mapping<address /* of ERC721 */ => tokenId=> string /* of owner*/)> _erc721TokenHolders;

function initializer(address ensRoot) {
_ensRoot = ensRoot;
}

function onERC721Received(address _operator, address _from, uint256 _tokenId, bytes _data) external returns(bytes4) {
  _erc721TokenHolders[_operator][_tokenId] = "0x" + msg.sender.toString();

  return /*bytes4 comply to ERC721 onReceived*/
}

function setOwner(address erc721, uint256 tokenId, string ens) {
  require(msg.sender.toString == "0x" + _erc721TokenHolders[erc721][tokenId]);
  _erc721TokenHolders[erc721][tokenId] = newOwnerENS;
}

function claim(address erc721, uint256 tokenId) {
  require(msg.sender.toString == "0x" + _erc721TokenHolders[erc721][tokenId]
    || _ensRoot.reverseLookup() == /*stored ens*);
  ERC721 contract = ERC721(erc721);
  erc721.safeTransferFrom(this, msg.sender, tokenId);
);
}
```

## Security Considerations
Needs disussion

## Copyright
Copyright and related rights waived via [CC0](../LICENSE.md).
