---
eip: 1202
title: Voting Standard
author: Zainan Victor Zhou <zzn@zzn.im>, and looking for co-author
type: Standards Track
category: ERC
status: WIP
created: 2018-07-08
discussions-to: https://github.com/ethereum/EIPs/issues/1202
---

## Summary
Propose a standard interface for voting.

## Motivation
Voting is one of the earliest example of EVM programming, and also a key to DAO/organizational governance process. We foresee many DAOs will ultimately need to leverage voting as one of the important part of their governance. By creating a voting standard for smart contract / token, we can have the following benefits

### Benefits
1. Allow general UI and applications to be built on top of a standardized voting to allow more general user to participate, and encourage more DApp and DAO to think about their governance
2. Allow delegate voting / smart contract voting, automatic voting 
3. Allow voting results to be recorded on-chain, in a standard way, and allow DAOs and DApps to honor the voting result programmatically.
4. Allow the compatibility with token standard such as [ERC-20](https://eips.ethereum.org/EIPS/eip-20) or other new standards([EIP-777](https://eips.ethereum.org/EIPS/eip-777)) and item standard such as [EIP-721](https://eips.ethereum.org/EIPS/eip-721)
5. Create massive potential for interoperability within Ethereum echo systems and other system.
6. Allow setting voting deadline, allow determine on single or multiple options. Allow requiring voting orders. (trade-off is interface complexity, we might need [ERC-20](https://eips.ethereum.org/EIPS/eip-20) approach and later a [EIP-777](https://eips.ethereum.org/EIPS/eip-777) for advanced voting) 
7. Recording the voting with weights with token amount.
8. Possibly allow trust-worthy privacy-safe voting and anonymous voting (with either voter address being un-associated with the vote they cast, given a list of randomized/obfuscated voting options).
8
9. Possibly allow result in reward  by voting partitipation or voting result

###  Use-cases: 
1. Determine on issuing new token, issuing more token or issuing sub-token
2. Determine on creating new item under [EIP-721](https://eips.ethereum.org/EIPS/eip-721)
3. Determine on election on certain person or smart contract to be delegated leader for project or subproject
4. Determine on auditing result ownership allowing migration of smart contract proxy address

## Examples
### Example 1: Simplest Version: Single Issue Yes/No Question Per Smart Contract Address Per Non-Weighted Vote
// TODO: provide example interface and implementation

### Example 2: Most Sophisticated Version: Multi-Issue Multi-Option Ordered-Result Override-able Privacy-Safe ERC-20/or other interface based Weighted Vote
// TODO: provide example interface and implementation

### Example 3: Somewhere-in-between Example 1 and Example 2 (To-Be-Discussed)
// TODO: provide example interface and implementation

## Specificiations
// TODO

## Rationale
// TODO

## Early Feedback Questions
Here are a few early questions I'd like to ask people here.
1. Have we had any duplicated EIPs that I overlooked. If not, have anyone attempted to do so, and why it did not continue to exist?
2. Should each issue have its own smart contract address (like individual item on [EIP-721](https://eips.ethereum.org/EIPS/eip-721)) or should it support multiple items in [EIP-1155](https://eips.ethereum.org/EIPS/eip-1155), or should it support multi-class voting in [EIP-1178](https://eips.ethereum.org/EIPS/eip-1178), [EIP-1203](https://eips.ethereum.org/EIPS/eip-1203) (e.g. certain issue can override another issue)
3. Should the voting support proxy(e.g [EIP-897](https://eips.ethereum.org/EIPS/eip-897), [EIP-1167](https://eips.ethereum.org/EIPS/eip-1167)) and migration? What are potential security concerns 
4. Should it be proposed in a single phase standard or multiple separate into multiple phase, with earlier phase supporting easiest and simplest interface, and later phase supporting more advanced interfaces? (I intuitively believe it will be the latter, but not sure if it might be possible to do it all-at once.)
1. Should it support or optionally support [EIP-165](https://eips.ethereum.org/EIPS/eip-165)? For public voting, support EIP-165 make it easier to discover, but for secret voting people might not want to disclose a voting for certain issue even exist.



## Reference
### Related EIPs
 - [EIP-20: ERC-20 Token Standard (a.k.a. ERC-20)](https://eips.ethereum.org/EIPS/eip-20)
 - [EIP-165: Standard Interface Detection](https://eips.ethereum.org/EIPS/eip-165)
 - [EIP-721: Non-Fungible Token Standard(a.k.a. ERC-721)](https://eips.ethereum.org/EIPS/eip-721)
 - [EIP-777: A New Advanced Token Standard](https://eips.ethereum.org/EIPS/eip-777)
 - [EIP-897: ERC DelegateProxy](https://eips.ethereum.org/EIPS/eip-897)
 - [EIP-1155: Crypto Item Standard](https://eips.ethereum.org/EIPS/eip-1155)
 - [EIP-1178: Multi-class Token Standard](https://eips.ethereum.org/EIPS/eip-1178)
 - [EIP-1167: Minimal Proxy Contract](https://eips.ethereum.org/EIPS/eip-1167)
 - [EIP-1203: Multi-class Token Standard(ERC-20 Extension)](https://eips.ethereum.org/EIPS/eip-1203)

## EIP WIP Work Logs
2018-07-08: Created early feedback request. Asked around discussion channels suggested in [EIP-1](https://eips.ethereum.org/EIPS/eip-1), such as [Ethereum-Magicians](https://ethereum-magicians.org/t/eip-x-voting-standard-early-feedback-wanted/670/2), [Gitter](https://gitter.im/ethereum/EIPs), [Reddit](https://www.reddit.com/r/ethereum/comments/8x6k11/early_feedback_request_for_eipx_voting_standard/)
2018-07-09: Added examples layout. Request for co-author.
