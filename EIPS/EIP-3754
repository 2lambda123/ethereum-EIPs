---
eip: 3754
title: A Vanilla Non-Fungible Token Standard
description: A vanilla NFT standard by removing data fields and functions related to `URI`.
author: Simon Tian <simon@dtopia.me>
discussions-to: https://github.com/ethereum/EIPs/issues/3753
status: Draft
type: Standards Track,
category (*only required for Standards Track): ERC
created: 2021-08-21
requires (*optional): <EIP number(s)>
replaces (*optional): <EIP number(s)>
---

## Abstract
The ERC721 NFT standard has gained much popularity for its capability of being associated with external contents via the data field `URI`. However, this is also handicapping NFTs not having external associations. This 
stardard is going to simplifiy the ERC721 standard by removing data fields and functions related to `URI` and introduce a vanilla NFT that is ideal for representing abstract ownership such as rights. This can open up 
more possibilities by allowing layers of abstraction being built on top of it.

## Motivation
In developing `dtopia.me`, NFTs represent ownership of utilities that are built upon ERC721 NFTs. Technically, it is possible to set all `URI` to an empty string to effectively obtain the same NFTs proposed in this standard, 
however, this introduces difficulty in explaining what an NFT without `URI` can do to people who are deeply rooted in the current understanding of NFTs. A new standard for this type of NFTs must be developed to distinguish itself 
from others.

## Specification
This standard is to remove data fields and functions related to `URI` from the current ERC721 implementation.

```
interface ERC3754 {
    function balanceOf(address owner) external view returns (uint256);
    function ownerOf(uint256 tokenId) external view returns (address);
    function name() external view returns (string memory);
    function symbol() external view returns (string memory);
    function totalSupply() external view returns (uint256);
    function approve(address to, uint256 tokenId) external;
    function getApproved(uint256 tokenId) external view returns (address);
    function setApprovalForAll(address operator, bool approved) external;
    function isApprovedForAll(address owner, address operator) external view returns (bool);
    function transferFrom(address from, address to, uint256 tokenId) external;
    function safeTransferFrom(address from, address to, uint256 tokenId) external;
    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) external;
}
```
## Rationale
NFTs do not have to be associated with any external metadata or links to media contents. They can exist as standalone abstract atomic tokens. Such tokens allow layers of abstract utilities built on top of them. New possibilities can be opened up because of this simplification. 
This can also reduce the costs in explaining this new type of NFTs.

## Backwards Compatibility
ERC3754 is a simplified version of ERC721. There is no further backwards compatibility required.

## Reference Implementation
https://github.com/simontianx/ERC3754

## Security Considerations
Since all `URI` related data fields and functions are removed, the security is enhanced. Tokens can be minted without having `URI`s prepared. Errors in dealing with `URI`s can be avoided.

## Copyright
Copyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).
