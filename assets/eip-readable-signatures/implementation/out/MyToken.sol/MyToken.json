{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_eip712Transaltor",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eip712TransalatorContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "domainSeparator",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "primaryType",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "encodedData",
          "type": "bytes"
        }
      ],
      "name": "evalEIP712Buffer",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintToCaller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "r",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "v",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "transferWithSig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101406040523480156200001257600080fd5b50604051620018bb380380620018bb833981016040819052620000359162000246565b60408051808201825260078082526626bcaa37b5b2b760c91b60208084018290528451808601865260018152603160f81b81830152855180870187529384528382019290925284518086019095526002855261135560f21b9085015291926003620000a183826200031c565b506004620000b082826200031c565b5050825160208085019190912083518483012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c0019052805194019390932091935091906080523060c052610120525050600680546001600160a01b0319166001600160a01b0385161790555062000174905033670de0b6b3a76400006200017b565b5062000410565b6001600160a01b038216620001d65760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001ea9190620003e8565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b6000602082840312156200025957600080fd5b81516001600160a01b03811681146200027157600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002a357607f821691505b602082108103620002c457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200024157600081815260208120601f850160051c81016020861015620002f35750805b601f850160051c820191505b818110156200031457828155600101620002ff565b505050505050565b81516001600160401b0381111562000338576200033862000278565b62000350816200034984546200028e565b84620002ca565b602080601f8311600181146200038857600084156200036f5750858301515b600019600386901b1c1916600185901b17855562000314565b600085815260208120601f198616915b82811015620003b95788860151825594840194600190910190840162000398565b5085821015620003d85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200040a57634e487b7160e01b600052601160045260246000fd5b92915050565b60805160a05160c05160e051610100516101205161145b620004606000396000610b4101526000610b9001526000610b6b01526000610ac401526000610aee01526000610b18015261145b6000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a2578063a457c2d711610071578063a457c2d714610217578063a9059cbb1461022a578063b9c1bd581461023d578063dd62ed3e1461025d578063e22e7c9c1461027057600080fd5b806370a08231146101aa5780637ecebe00146101d357806391c0189b146101fc57806395d89b411461020f57600080fd5b8063313ce567116100de578063313ce567146101765780633644e51514610185578063395093511461018d57806349d64dc1146101a057600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b61011861029b565b6040516101259190610f74565b60405180910390f35b61014161013c366004610faa565b61032d565b6040519015158152602001610125565b6002545b604051908152602001610125565b610141610171366004610fd4565b610347565b60405160128152602001610125565b61015561036b565b61014161019b366004610faa565b61037a565b6101a861039c565b005b6101556101b8366004611010565b6001600160a01b031660009081526020819052604090205490565b6101556101e1366004611010565b6001600160a01b031660009081526005602052604090205490565b6101a861020a36600461102b565b6103b0565b61011861053b565b610141610225366004610faa565b61054a565b610141610238366004610faa565b6105c5565b61025061024b36600461114b565b6105d3565b60405161012591906111e3565b61015561026b366004611245565b61074a565b600654610283906001600160a01b031681565b6040516001600160a01b039091168152602001610125565b6060600380546102aa90611278565b80601f01602080910402602001604051908101604052809291908181526020018280546102d690611278565b80156103235780601f106102f857610100808354040283529160200191610323565b820191906000526020600020905b81548152906001019060200180831161030657829003601f168201915b5050505050905090565b60003361033b818585610775565b60019150505b92915050565b600033610355858285610899565b610360858585610913565b506001949350505050565b6000610375610ab7565b905090565b60003361033b81858561038d838361074a565b61039791906112c8565b610775565b6103ae33670de0b6b3a7640000610bde565b565b834211156104055760405162461bcd60e51b815260206004820152601d60248201527f5472616e736665725369673a206578706972656420646561646c696e6500000060448201526064015b60405180910390fd5b6001600160a01b038716600090815260056020526040812080547f4144f681a2e4d6d2035dcbc0720f95d08cc1779083c71290e8a4bb4c1529f59e918a918a918a919086610452836112db565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006104b182610c9d565b905060006104c182878787610ceb565b9050896001600160a01b0316816001600160a01b0316146105245760405162461bcd60e51b815260206004820152601960248201527f5472616e736665725369673a20756e617574686f72697a65640000000000000060448201526064016103fc565b61052f8a8a8a610913565b50505050505050505050565b6060600480546102aa90611278565b60003381610558828661074a565b9050838110156105b85760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103fc565b6103608286868403610775565b60003361033b818585610913565b604051672a3930b739b332b960c11b6020820152606090602801604051602081830303815290604052805190602001208360405160200161061491906112f4565b60405160208183030381529060405280519060200120146106775760405162461bcd60e51b815260206004820152601d60248201527f4d79546f6b656e3a20696e76616c6964207072696d617279207479706500000060448201526064016103fc565b61067f610ab7565b84146106cd5760405162461bcd60e51b815260206004820152601760248201527f4d79546f6b656e3a20496e76616c696420646f6d61696e00000000000000000060448201526064016103fc565b60065460405163f42e5f2560e01b81526001600160a01b039091169063f42e5f25906106fd908590600401610f74565b600060405180830381865afa15801561071a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107429190810190611310565b949350505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166107d75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103fc565b6001600160a01b0382166108385760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006108a5848461074a565b9050600019811461090d57818110156109005760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103fc565b61090d8484848403610775565b50505050565b6001600160a01b0383166109775760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103fc565b6001600160a01b0382166109d95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103fc565b6001600160a01b03831660009081526020819052604090205481811015610a515760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103fc565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361090d565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610b1057507f000000000000000000000000000000000000000000000000000000000000000046145b15610b3a57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6001600160a01b038216610c345760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103fc565b8060026000828254610c4691906112c8565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000610341610caa610ab7565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610cfc87878787610d13565b91509150610d0981610dd7565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610d4a5750600090506003610dce565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610d9e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610dc757600060019250925050610dce565b9150600090505b94509492505050565b6000816004811115610deb57610deb61140f565b03610df35750565b6001816004811115610e0757610e0761140f565b03610e545760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103fc565b6002816004811115610e6857610e6861140f565b03610eb55760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103fc565b6003816004811115610ec957610ec961140f565b03610f215760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103fc565b50565b60005b83811015610f3f578181015183820152602001610f27565b50506000910152565b60008151808452610f60816020860160208601610f24565b601f01601f19169290920160200192915050565b602081526000610f876020830184610f48565b9392505050565b80356001600160a01b0381168114610fa557600080fd5b919050565b60008060408385031215610fbd57600080fd5b610fc683610f8e565b946020939093013593505050565b600080600060608486031215610fe957600080fd5b610ff284610f8e565b925061100060208501610f8e565b9150604084013590509250925092565b60006020828403121561102257600080fd5b610f8782610f8e565b600080600080600080600060e0888a03121561104657600080fd5b61104f88610f8e565b965061105d60208901610f8e565b95506040880135945060608801359350608088013560ff8116811461108157600080fd5b9699959850939692959460a0840135945060c09093013592915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156110dd576110dd61109e565b604052919050565b600067ffffffffffffffff8211156110ff576110ff61109e565b50601f01601f191660200190565b600061112061111b846110e5565b6110b4565b905082815283838301111561113457600080fd5b828260208301376000602084830101529392505050565b60008060006060848603121561116057600080fd5b83359250602084013567ffffffffffffffff8082111561117f57600080fd5b818601915086601f83011261119357600080fd5b6111a28783356020850161110d565b935060408601359150808211156111b857600080fd5b508401601f810186136111ca57600080fd5b6111d98682356020840161110d565b9150509250925092565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561123857603f19888603018452611226858351610f48565b9450928501929085019060010161120a565b5092979650505050505050565b6000806040838503121561125857600080fd5b61126183610f8e565b915061126f60208401610f8e565b90509250929050565b600181811c9082168061128c57607f821691505b6020821081036112ac57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610341576103416112b2565b6000600182016112ed576112ed6112b2565b5060010190565b60008251611306818460208701610f24565b9190910192915050565b6000602080838503121561132357600080fd5b825167ffffffffffffffff8082111561133b57600080fd5b818501915085601f83011261134f57600080fd5b8151818111156113615761136161109e565b8060051b6113708582016110b4565b918252838101850191858101908984111561138a57600080fd5b86860192505b83831015611402578251858111156113a85760008081fd5b8601603f81018b136113ba5760008081fd5b8781015160406113cc61111b836110e5565b8281528d828486010111156113e15760008081fd5b6113f0838c8301848701610f24565b85525050509186019190860190611390565b9998505050505050505050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220e0a94af6aeed3c9ae39c27c2060db72746d02d23fcabe882a07a87df023594ec64736f6c63430008110033",
    "sourceMap": "428:2161:25:-:0;;;882:180;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2464:602:21;;;;;;;;;;;;-1:-1:-1;;;2464:602:21;;;;;;;;;;;;;;;;;-1:-1:-1;;;2464:602:21;;;;1976:113:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1976:113:15;;;;2464:602:21;;2042:5:15;:13;1976:113;2042:5;:13;:::i;:::-;-1:-1:-1;2065:7:15;:17;2075:7;2065;:17;:::i;:::-;-1:-1:-1;;2550:22:21;;;;;;;;;;2606:25;;;;;;2787;;;;2822:31;;;;2882:13;2863:32;;;;-1:-1:-1;3642:73:21;;2660:117;3642:73;;;3289:25:35;;;3330:18;;;3323:34;;;-1:-1:-1;3373:18:35;;3366:34;;;3416:18;;;3409:34;;;;3709:4:21;3459:19:35;;;3452:61;3642:73:21;;;;;;;;;;3261:19:35;;3642:73:21;;3632:84;;;;;;;;2550:22;;-1:-1:-1;2606:25:21;2660:117;2905:85;;3023:4;3000:28;;3038:21;;-1:-1:-1;;977:25:25::2;:45:::0;;-1:-1:-1;;;;;;977:45:25::2;-1:-1:-1::0;;;;;977:45:25;::::2;;::::0;;-1:-1:-1;1032:23:25::2;::::0;-1:-1:-1;1038:10:25::2;1050:4;1032:5;:23::i;:::-;882:180:::0;428:2161;;8567:535:15;-1:-1:-1;;;;;8650:21:15;;8642:65;;;;-1:-1:-1;;;8642:65:15;;3726:2:35;8642:65:15;;;3708:21:35;3765:2;3745:18;;;3738:30;3804:33;3784:18;;;3777:61;3855:18;;8642:65:15;;;;;;;;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:15;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;4257:25:35;;;8999:37:15;;4230:18:35;8999:37:15;;;;;;;8567:535;;:::o;12180:121::-;;;;:::o;14:290:35:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:35;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:35:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:545::-;1054:2;1049:3;1046:11;1043:448;;;1090:1;1115:5;1111:2;1104:17;1160:4;1156:2;1146:19;1230:2;1218:10;1214:19;1211:1;1207:27;1201:4;1197:38;1266:4;1254:10;1251:20;1248:47;;;-1:-1:-1;1289:4:35;1248:47;1344:2;1339:3;1335:12;1332:1;1328:20;1322:4;1318:31;1308:41;;1399:82;1417:2;1410:5;1407:13;1399:82;;;1462:17;;;1443:1;1432:13;1399:82;;;1403:3;;;952:545;;;:::o;1673:1352::-;1793:10;;-1:-1:-1;;;;;1815:30:35;;1812:56;;;1848:18;;:::i;:::-;1877:97;1967:6;1927:38;1959:4;1953:11;1927:38;:::i;:::-;1921:4;1877:97;:::i;:::-;2029:4;;2093:2;2082:14;;2110:1;2105:663;;;;2812:1;2829:6;2826:89;;;-1:-1:-1;2881:19:35;;;2875:26;2826:89;-1:-1:-1;;1630:1:35;1626:11;;;1622:24;1618:29;1608:40;1654:1;1650:11;;;1605:57;2928:81;;2075:944;;2105:663;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2141:20:35;;;2259:236;2273:7;2270:1;2267:14;2259:236;;;2362:19;;;2356:26;2341:42;;2454:27;;;;2422:1;2410:14;;;;2289:19;;2259:236;;;2263:3;2523:6;2514:7;2511:19;2508:201;;;2584:19;;;2578:26;-1:-1:-1;;2667:1:35;2663:14;;;2679:3;2659:24;2655:37;2651:42;2636:58;2621:74;;2508:201;-1:-1:-1;;;;;2755:1:35;2739:14;;;2735:22;2722:36;;-1:-1:-1;1673:1352:35:o;3884:222::-;3949:9;;;3970:10;;;3967:133;;;4022:10;4017:3;4013:20;4010:1;4003:31;4057:4;4054:1;4047:15;4085:4;4082:1;4075:15;3967:133;3884:222;;;;:::o;4111:177::-;428:2161:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a2578063a457c2d711610071578063a457c2d714610217578063a9059cbb1461022a578063b9c1bd581461023d578063dd62ed3e1461025d578063e22e7c9c1461027057600080fd5b806370a08231146101aa5780637ecebe00146101d357806391c0189b146101fc57806395d89b411461020f57600080fd5b8063313ce567116100de578063313ce567146101765780633644e51514610185578063395093511461018d57806349d64dc1146101a057600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b61011861029b565b6040516101259190610f74565b60405180910390f35b61014161013c366004610faa565b61032d565b6040519015158152602001610125565b6002545b604051908152602001610125565b610141610171366004610fd4565b610347565b60405160128152602001610125565b61015561036b565b61014161019b366004610faa565b61037a565b6101a861039c565b005b6101556101b8366004611010565b6001600160a01b031660009081526020819052604090205490565b6101556101e1366004611010565b6001600160a01b031660009081526005602052604090205490565b6101a861020a36600461102b565b6103b0565b61011861053b565b610141610225366004610faa565b61054a565b610141610238366004610faa565b6105c5565b61025061024b36600461114b565b6105d3565b60405161012591906111e3565b61015561026b366004611245565b61074a565b600654610283906001600160a01b031681565b6040516001600160a01b039091168152602001610125565b6060600380546102aa90611278565b80601f01602080910402602001604051908101604052809291908181526020018280546102d690611278565b80156103235780601f106102f857610100808354040283529160200191610323565b820191906000526020600020905b81548152906001019060200180831161030657829003601f168201915b5050505050905090565b60003361033b818585610775565b60019150505b92915050565b600033610355858285610899565b610360858585610913565b506001949350505050565b6000610375610ab7565b905090565b60003361033b81858561038d838361074a565b61039791906112c8565b610775565b6103ae33670de0b6b3a7640000610bde565b565b834211156104055760405162461bcd60e51b815260206004820152601d60248201527f5472616e736665725369673a206578706972656420646561646c696e6500000060448201526064015b60405180910390fd5b6001600160a01b038716600090815260056020526040812080547f4144f681a2e4d6d2035dcbc0720f95d08cc1779083c71290e8a4bb4c1529f59e918a918a918a919086610452836112db565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006104b182610c9d565b905060006104c182878787610ceb565b9050896001600160a01b0316816001600160a01b0316146105245760405162461bcd60e51b815260206004820152601960248201527f5472616e736665725369673a20756e617574686f72697a65640000000000000060448201526064016103fc565b61052f8a8a8a610913565b50505050505050505050565b6060600480546102aa90611278565b60003381610558828661074a565b9050838110156105b85760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103fc565b6103608286868403610775565b60003361033b818585610913565b604051672a3930b739b332b960c11b6020820152606090602801604051602081830303815290604052805190602001208360405160200161061491906112f4565b60405160208183030381529060405280519060200120146106775760405162461bcd60e51b815260206004820152601d60248201527f4d79546f6b656e3a20696e76616c6964207072696d617279207479706500000060448201526064016103fc565b61067f610ab7565b84146106cd5760405162461bcd60e51b815260206004820152601760248201527f4d79546f6b656e3a20496e76616c696420646f6d61696e00000000000000000060448201526064016103fc565b60065460405163f42e5f2560e01b81526001600160a01b039091169063f42e5f25906106fd908590600401610f74565b600060405180830381865afa15801561071a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107429190810190611310565b949350505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166107d75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103fc565b6001600160a01b0382166108385760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006108a5848461074a565b9050600019811461090d57818110156109005760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103fc565b61090d8484848403610775565b50505050565b6001600160a01b0383166109775760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103fc565b6001600160a01b0382166109d95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103fc565b6001600160a01b03831660009081526020819052604090205481811015610a515760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103fc565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361090d565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610b1057507f000000000000000000000000000000000000000000000000000000000000000046145b15610b3a57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6001600160a01b038216610c345760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103fc565b8060026000828254610c4691906112c8565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000610341610caa610ab7565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610cfc87878787610d13565b91509150610d0981610dd7565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610d4a5750600090506003610dce565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610d9e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610dc757600060019250925050610dce565b9150600090505b94509492505050565b6000816004811115610deb57610deb61140f565b03610df35750565b6001816004811115610e0757610e0761140f565b03610e545760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103fc565b6002816004811115610e6857610e6861140f565b03610eb55760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103fc565b6003816004811115610ec957610ec961140f565b03610f215760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103fc565b50565b60005b83811015610f3f578181015183820152602001610f27565b50506000910152565b60008151808452610f60816020860160208601610f24565b601f01601f19169290920160200192915050565b602081526000610f876020830184610f48565b9392505050565b80356001600160a01b0381168114610fa557600080fd5b919050565b60008060408385031215610fbd57600080fd5b610fc683610f8e565b946020939093013593505050565b600080600060608486031215610fe957600080fd5b610ff284610f8e565b925061100060208501610f8e565b9150604084013590509250925092565b60006020828403121561102257600080fd5b610f8782610f8e565b600080600080600080600060e0888a03121561104657600080fd5b61104f88610f8e565b965061105d60208901610f8e565b95506040880135945060608801359350608088013560ff8116811461108157600080fd5b9699959850939692959460a0840135945060c09093013592915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156110dd576110dd61109e565b604052919050565b600067ffffffffffffffff8211156110ff576110ff61109e565b50601f01601f191660200190565b600061112061111b846110e5565b6110b4565b905082815283838301111561113457600080fd5b828260208301376000602084830101529392505050565b60008060006060848603121561116057600080fd5b83359250602084013567ffffffffffffffff8082111561117f57600080fd5b818601915086601f83011261119357600080fd5b6111a28783356020850161110d565b935060408601359150808211156111b857600080fd5b508401601f810186136111ca57600080fd5b6111d98682356020840161110d565b9150509250925092565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561123857603f19888603018452611226858351610f48565b9450928501929085019060010161120a565b5092979650505050505050565b6000806040838503121561125857600080fd5b61126183610f8e565b915061126f60208401610f8e565b90509250929050565b600181811c9082168061128c57607f821691505b6020821081036112ac57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610341576103416112b2565b6000600182016112ed576112ed6112b2565b5060010190565b60008251611306818460208701610f24565b9190910192915050565b6000602080838503121561132357600080fd5b825167ffffffffffffffff8082111561133b57600080fd5b818501915085601f83011261134f57600080fd5b8151818111156113615761136161109e565b8060051b6113708582016110b4565b918252838101850191858101908984111561138a57600080fd5b86860192505b83831015611402578251858111156113a85760008081fd5b8601603f81018b136113ba5760008081fd5b8781015160406113cc61111b836110e5565b8281528d828486010111156113e15760008081fd5b6113f0838c8301848701610f24565b85525050509186019190860190611390565b9998505050505050505050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220e0a94af6aeed3c9ae39c27c2060db72746d02d23fcabe882a07a87df023594ec64736f6c63430008110033",
    "sourceMap": "428:2161:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1372:14:35;;1365:22;1347:41;;1335:2;1320:18;4431:197:15;1207:187:35;3242:106:15;3329:12;;3242:106;;;1545:25:35;;;1533:2;1518:18;3242:106:15;1399:177:35;5190:286:15;;;;;;:::i;:::-;;:::i;3091:91::-;;;3173:2;2056:36:35;;2044:2;2029:18;3091:91:15;1914:184:35;1949:102:25;;;:::i;5871:234:15:-;;;;;;:::i;:::-;;:::i;1068:71:25:-;;;:::i;:::-;;3406:125:15;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:15;3480:7;3506:18;;;;;;;;;;;;3406:125;1145:99:25;;;;;;:::i;:::-;-1:-1:-1;;;;;1223:14:25;1197:7;1223:14;;;:7;:14;;;;;;;1145:99;1250:693;;;;;;:::i;:::-;;:::i;2365:102:15:-;;;:::i;6592:427::-;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;2057:530:25:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3974:149:15:-;;;;;;:::i;:::-;;:::i;536:40:25:-;;;;;-1:-1:-1;;;;;536:40:25;;;;;;-1:-1:-1;;;;;6231:32:35;;;6213:51;;6201:2;6186:18;536:40:25;6067:203:35;2154:98:15;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:18;4568:32:15;719:10:18;4584:7:15;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;;:::o;5190:286::-;5317:4;719:10:18;5373:38:15;5389:4;719:10:18;5404:6:15;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:15;;5190:286;-1:-1:-1;;;;5190:286:15:o;1949:102:25:-;1998:7;2024:20;:18;:20::i;:::-;2017:27;;1949:102;:::o;5871:234:15:-;5959:4;719:10:18;6013:64:15;719:10:18;6029:7:15;6066:10;6038:25;719:10:18;6029:7:15;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;1068:71:25:-;1109:23;1115:10;1127:4;1109:5;:23::i;:::-;1068:71::o;1250:693::-;1422:8;1403:15;:27;;1395:69;;;;-1:-1:-1;;;1395:69:25;;7124:2:35;1395:69:25;;;7106:21:35;7163:2;7143:18;;;7136:30;7202:31;7182:18;;;7175:59;7251:18;;1395:69:25;;;;;;;;;-1:-1:-1;;;;;1553:13:25;;1474:18;1553:13;;;:7;:13;;;;;:15;;783:92;;1535:4;;1541:2;;1545:6;;1553:15;1474:18;1553:15;;;:::i;:::-;;;;-1:-1:-1;1505:74:25;;;;;;7707:25:35;;;;-1:-1:-1;;;;;7806:15:35;;;7786:18;;;7779:43;7858:15;;;;7838:18;;;7831:43;7890:18;;;7883:34;7933:19;;;7926:35;7977:19;;;7970:35;;;7679:19;;1505:74:25;;;;;;;;;;;;1495:85;;;;;;1474:106;;1739:12;1754:28;1771:10;1754:16;:28::i;:::-;1739:43;;1792:14;1809:28;1823:4;1829:1;1832;1835;1809:13;:28::i;:::-;1792:45;;1865:4;-1:-1:-1;;;;;1855:14:25;:6;-1:-1:-1;;;;;1855:14:25;;1847:52;;;;-1:-1:-1;;;1847:52:25;;8218:2:35;1847:52:25;;;8200:21:35;8257:2;8237:18;;;8230:30;8296:27;8276:18;;;8269:55;8341:18;;1847:52:25;8016:349:35;1847:52:25;1909:27;1919:4;1925:2;1929:6;1909:9;:27::i;:::-;1385:558;;;1250:693;;;;;;;:::o;2365:102:15:-;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;6685:4;719:10:18;6685:4:15;6766:25;719:10:18;6783:7:15;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:15;;8572:2:35;6801:85:15;;;8554:21:35;8611:2;8591:18;;;8584:30;8650:34;8630:18;;;8623:62;-1:-1:-1;;;8701:18:35;;;8694:35;8746:19;;6801:85:15;8370:401:35;6801:85:15;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:18;3860:28:15;719:10:18;3877:2:15;3881:6;3860:9;:28::i;2057:530:25:-;2323:28;;-1:-1:-1;;;2323:28:25;;;8978:23:35;2221:15:25;;9017:11:35;;2323:28:25;;;;;;;;;;;;2313:39;;;;;;2296:11;2279:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;2269:40;;;;;;:83;2248:159;;;;-1:-1:-1;;;2248:159:25;;9535:2:35;2248:159:25;;;9517:21:35;9574:2;9554:18;;;9547:30;9613:31;9593:18;;;9586:59;9662:18;;2248:159:25;9333:353:35;2248:159:25;2444:20;:18;:20::i;:::-;2425:15;:39;2417:75;;;;-1:-1:-1;;;2417:75:25;;9893:2:35;2417:75:25;;;9875:21:35;9932:2;9912:18;;;9905:30;9971:25;9951:18;;;9944:53;10014:18;;2417:75:25;9691:347:35;2417:75:25;2532:25;;2509:71;;-1:-1:-1;;;2509:71:25;;-1:-1:-1;;;;;2532:25:25;;;;2509:58;;:71;;2568:11;;2509:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2509:71:25;;;;;;;;;;;;:::i;:::-;2502:78;2057:530;-1:-1:-1;;;;2057:530:25:o;3974:149:15:-;-1:-1:-1;;;;;4089:18:15;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;10504:370::-;-1:-1:-1;;;;;10635:19:15;;10627:68;;;;-1:-1:-1;;;10627:68:15;;12150:2:35;10627:68:15;;;12132:21:35;12189:2;12169:18;;;12162:30;12228:34;12208:18;;;12201:62;-1:-1:-1;;;12279:18:35;;;12272:34;12323:19;;10627:68:15;11948:400:35;10627:68:15;-1:-1:-1;;;;;10713:21:15;;10705:68;;;;-1:-1:-1;;;10705:68:15;;12555:2:35;10705:68:15;;;12537:21:35;12594:2;12574:18;;;12567:30;12633:34;12613:18;;;12606:62;-1:-1:-1;;;12684:18:35;;;12677:32;12726:19;;10705:68:15;12353:398:35;10705:68:15;-1:-1:-1;;;;;10784:18:15;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1545:25:35;;;10835:32:15;;1518:18:35;10835:32:15;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:15;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:15;;12958:2:35;11404:68:15;;;12940:21:35;12997:2;12977:18;;;12970:30;13036:31;13016:18;;;13009:59;13085:18;;11404:68:15;12756:353:35;11404:68:15;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:15;;7591:68;;;;-1:-1:-1;;;7591:68:15;;13316:2:35;7591:68:15;;;13298:21:35;13355:2;13335:18;;;13328:30;13394:34;13374:18;;;13367:62;-1:-1:-1;;;13445:18:35;;;13438:35;13490:19;;7591:68:15;13114:401:35;7591:68:15;-1:-1:-1;;;;;7677:16:15;;7669:64;;;;-1:-1:-1;;;7669:64:15;;13722:2:35;7669:64:15;;;13704:21:35;13761:2;13741:18;;;13734:30;13800:34;13780:18;;;13773:62;-1:-1:-1;;;13851:18:35;;;13844:33;13894:19;;7669:64:15;13520:399:35;7669:64:15;-1:-1:-1;;;;;7815:15:15;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:15;;14126:2:35;7840:72:15;;;14108:21:35;14165:2;14145:18;;;14138:30;14204:34;14184:18;;;14177:62;-1:-1:-1;;;14255:18:35;;;14248:36;14301:19;;7840:72:15;13924:402:35;7840:72:15;-1:-1:-1;;;;;7946:15:15;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1545:25:35;;;8161:13:15;;8210:26;;1518:18:35;8210:26:15;;;;;;;8247:37;12180:121;3152:308:21;3205:7;3236:4;-1:-1:-1;;;;;3245:12:21;3228:29;;:66;;;;;3278:16;3261:13;:33;3228:66;3224:230;;;-1:-1:-1;3317:24:21;;3152:308::o;3224:230::-;-1:-1:-1;3642:73:21;;;3401:10;3642:73;;;;14950:25:35;;;;3413:12:21;14991:18:35;;;14984:34;3427:15:21;15034:18:35;;;15027:34;3686:13:21;15077:18:35;;;15070:34;3709:4:21;15120:19:35;;;;15113:61;;;;3642:73:21;;;;;;;;;;14922:19:35;;;;3642:73:21;;;3632:84;;;;;;1949:102:25:o;8567:535:15:-;-1:-1:-1;;;;;8650:21:15;;8642:65;;;;-1:-1:-1;;;8642:65:15;;14533:2:35;8642:65:15;;;14515:21:35;14572:2;14552:18;;;14545:30;14611:33;14591:18;;;14584:61;14662:18;;8642:65:15;14331:355:35;8642:65:15;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:15;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;1545:25:35;;;8999:37:15;;1518:18:35;8999:37:15;;;;;;;8567:535;;:::o;4348:165:21:-;4425:7;4451:55;4473:20;:18;:20::i;:::-;4495:10;8470:57:20;;-1:-1:-1;;;8470:57:20;;;15443:27:35;15486:11;;;15479:27;;;15522:12;;;15515:28;;;8434:7:20;;15559:12:35;;8470:57:20;;;;;;;;;;;;8460:68;;;;;;8453:75;;8341:194;;;;;6696:270;6819:7;6839:17;6858:18;6880:25;6891:4;6897:1;6900;6903;6880:10;:25::i;:::-;6838:67;;;;6915:18;6927:5;6915:11;:18::i;:::-;-1:-1:-1;6950:9:20;6696:270;-1:-1:-1;;;;;6696:270:20:o;5069:1494::-;5195:7;;6119:66;6106:79;;6102:161;;;-1:-1:-1;6217:1:20;;-1:-1:-1;6221:30:20;6201:51;;6102:161;6374:24;;;6357:14;6374:24;;;;;;;;;15809:25:35;;;15882:4;15870:17;;15850:18;;;15843:45;;;;15904:18;;;15897:34;;;15947:18;;;15940:34;;;6374:24:20;;15781:19:35;;6374:24:20;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6374:24:20;;-1:-1:-1;;6374:24:20;;;-1:-1:-1;;;;;;;6412:20:20;;6408:101;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;-1:-1:-1;6535:20:20;;-1:-1:-1;5069:1494:20;;;;;;;;:::o;570:511::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;788:34;;-1:-1:-1;;;788:34:20;;16319:2:35;788:34:20;;;16301:21:35;16358:2;16338:18;;;16331:30;16397:26;16377:18;;;16370:54;16441:18;;788:34:20;16117:348:35;730:345:20;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;903:41;;-1:-1:-1;;;903:41:20;;16672:2:35;903:41:20;;;16654:21:35;16711:2;16691:18;;;16684:30;16750:33;16730:18;;;16723:61;16801:18;;903:41:20;16470:355:35;839:236:20;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;1020:44;;-1:-1:-1;;;1020:44:20;;17032:2:35;1020:44:20;;;17014:21:35;17071:2;17051:18;;;17044:30;17110:34;17090:18;;;17083:62;-1:-1:-1;;;17161:18:35;;;17154:32;17203:19;;1020:44:20;16830:398:35;961:114:20;570:511;:::o;14:250:35:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:35;238:16;;231:27;14:250::o;269:271::-;311:3;349:5;343:12;376:6;371:3;364:19;392:76;461:6;454:4;449:3;445:14;438:4;431:5;427:16;392:76;:::i;:::-;522:2;501:15;-1:-1:-1;;497:29:35;488:39;;;;529:4;484:50;;269:271;-1:-1:-1;;269:271:35:o;545:220::-;694:2;683:9;676:21;657:4;714:45;755:2;744:9;740:18;732:6;714:45;:::i;:::-;706:53;545:220;-1:-1:-1;;;545:220:35:o;770:173::-;838:20;;-1:-1:-1;;;;;887:31:35;;877:42;;867:70;;933:1;930;923:12;867:70;770:173;;;:::o;948:254::-;1016:6;1024;1077:2;1065:9;1056:7;1052:23;1048:32;1045:52;;;1093:1;1090;1083:12;1045:52;1116:29;1135:9;1116:29;:::i;:::-;1106:39;1192:2;1177:18;;;;1164:32;;-1:-1:-1;;;948:254:35:o;1581:328::-;1658:6;1666;1674;1727:2;1715:9;1706:7;1702:23;1698:32;1695:52;;;1743:1;1740;1733:12;1695:52;1766:29;1785:9;1766:29;:::i;:::-;1756:39;;1814:38;1848:2;1837:9;1833:18;1814:38;:::i;:::-;1804:48;;1899:2;1888:9;1884:18;1871:32;1861:42;;1581:328;;;;;:::o;2285:186::-;2344:6;2397:2;2385:9;2376:7;2372:23;2368:32;2365:52;;;2413:1;2410;2403:12;2365:52;2436:29;2455:9;2436:29;:::i;2476:693::-;2587:6;2595;2603;2611;2619;2627;2635;2688:3;2676:9;2667:7;2663:23;2659:33;2656:53;;;2705:1;2702;2695:12;2656:53;2728:29;2747:9;2728:29;:::i;:::-;2718:39;;2776:38;2810:2;2799:9;2795:18;2776:38;:::i;:::-;2766:48;;2861:2;2850:9;2846:18;2833:32;2823:42;;2912:2;2901:9;2897:18;2884:32;2874:42;;2966:3;2955:9;2951:19;2938:33;3011:4;3004:5;3000:16;2993:5;2990:27;2980:55;;3031:1;3028;3021:12;2980:55;2476:693;;;;-1:-1:-1;2476:693:35;;;;3054:5;3106:3;3091:19;;3078:33;;-1:-1:-1;3158:3:35;3143:19;;;3130:33;;2476:693;-1:-1:-1;;2476:693:35:o;3174:127::-;3235:10;3230:3;3226:20;3223:1;3216:31;3266:4;3263:1;3256:15;3290:4;3287:1;3280:15;3306:275;3377:2;3371:9;3442:2;3423:13;;-1:-1:-1;;3419:27:35;3407:40;;3477:18;3462:34;;3498:22;;;3459:62;3456:88;;;3524:18;;:::i;:::-;3560:2;3553:22;3306:275;;-1:-1:-1;3306:275:35:o;3586:187::-;3635:4;3668:18;3660:6;3657:30;3654:56;;;3690:18;;:::i;:::-;-1:-1:-1;3756:2:35;3735:15;-1:-1:-1;;3731:29:35;3762:4;3727:40;;3586:187::o;3778:338::-;3843:5;3872:53;3888:36;3917:6;3888:36;:::i;:::-;3872:53;:::i;:::-;3863:62;;3948:6;3941:5;3934:21;3988:3;3979:6;3974:3;3970:16;3967:25;3964:45;;;4005:1;4002;3995:12;3964:45;4054:6;4049:3;4042:4;4035:5;4031:16;4018:43;4108:1;4101:4;4092:6;4085:5;4081:18;4077:29;4070:40;3778:338;;;;;:::o;4121:868::-;4217:6;4225;4233;4286:2;4274:9;4265:7;4261:23;4257:32;4254:52;;;4302:1;4299;4292:12;4254:52;4338:9;4325:23;4315:33;;4399:2;4388:9;4384:18;4371:32;4422:18;4463:2;4455:6;4452:14;4449:34;;;4479:1;4476;4469:12;4449:34;4517:6;4506:9;4502:22;4492:32;;4562:7;4555:4;4551:2;4547:13;4543:27;4533:55;;4584:1;4581;4574:12;4533:55;4607:74;4673:7;4668:2;4655:16;4650:2;4646;4642:11;4607:74;:::i;:::-;4597:84;;4734:2;4723:9;4719:18;4706:32;4690:48;;4763:2;4753:8;4750:16;4747:36;;;4779:1;4776;4769:12;4747:36;-1:-1:-1;4802:24:35;;4857:4;4849:13;;4845:27;-1:-1:-1;4835:55:35;;4886:1;4883;4876:12;4835:55;4909:74;4975:7;4970:2;4957:16;4952:2;4948;4944:11;4909:74;:::i;:::-;4899:84;;;4121:868;;;;;:::o;4994:803::-;5156:4;5185:2;5225;5214:9;5210:18;5255:2;5244:9;5237:21;5278:6;5313;5307:13;5344:6;5336;5329:22;5382:2;5371:9;5367:18;5360:25;;5444:2;5434:6;5431:1;5427:14;5416:9;5412:30;5408:39;5394:53;;5482:2;5474:6;5470:15;5503:1;5513:255;5527:6;5524:1;5521:13;5513:255;;;5620:2;5616:7;5604:9;5596:6;5592:22;5588:36;5583:3;5576:49;5648:40;5681:6;5672;5666:13;5648:40;:::i;:::-;5638:50;-1:-1:-1;5746:12:35;;;;5711:15;;;;5549:1;5542:9;5513:255;;;-1:-1:-1;5785:6:35;;4994:803;-1:-1:-1;;;;;;;4994:803:35:o;5802:260::-;5870:6;5878;5931:2;5919:9;5910:7;5906:23;5902:32;5899:52;;;5947:1;5944;5937:12;5899:52;5970:29;5989:9;5970:29;:::i;:::-;5960:39;;6018:38;6052:2;6041:9;6037:18;6018:38;:::i;:::-;6008:48;;5802:260;;;;;:::o;6275:380::-;6354:1;6350:12;;;;6397;;;6418:61;;6472:4;6464:6;6460:17;6450:27;;6418:61;6525:2;6517:6;6514:14;6494:18;6491:38;6488:161;;6571:10;6566:3;6562:20;6559:1;6552:31;6606:4;6603:1;6596:15;6634:4;6631:1;6624:15;6488:161;;6275:380;;;:::o;6660:127::-;6721:10;6716:3;6712:20;6709:1;6702:31;6752:4;6749:1;6742:15;6776:4;6773:1;6766:15;6792:125;6857:9;;;6878:10;;;6875:36;;;6891:18;;:::i;7280:135::-;7319:3;7340:17;;;7337:43;;7360:18;;:::i;:::-;-1:-1:-1;7407:1:35;7396:13;;7280:135::o;9039:289::-;9170:3;9208:6;9202:13;9224:66;9283:6;9278:3;9271:4;9263:6;9259:17;9224:66;:::i;:::-;9306:16;;;;;9039:289;-1:-1:-1;;9039:289:35:o;10266:1677::-;10371:6;10402:2;10445;10433:9;10424:7;10420:23;10416:32;10413:52;;;10461:1;10458;10451:12;10413:52;10494:9;10488:16;10523:18;10564:2;10556:6;10553:14;10550:34;;;10580:1;10577;10570:12;10550:34;10618:6;10607:9;10603:22;10593:32;;10663:7;10656:4;10652:2;10648:13;10644:27;10634:55;;10685:1;10682;10675:12;10634:55;10714:2;10708:9;10736:2;10732;10729:10;10726:36;;;10742:18;;:::i;:::-;10788:2;10785:1;10781:10;10811:28;10835:2;10831;10827:11;10811:28;:::i;:::-;10873:15;;;10943:11;;;10939:20;;;10904:12;;;;10971:19;;;10968:39;;;11003:1;11000;10993:12;10968:39;11035:2;11031;11027:11;11016:22;;11047:866;11063:6;11058:3;11055:15;11047:866;;;11142:3;11136:10;11178:2;11165:11;11162:19;11159:109;;;11222:1;11251:2;11247;11240:14;11159:109;11291:20;;11346:2;11338:11;;11334:25;-1:-1:-1;11324:123:35;;11401:1;11430:2;11426;11419:14;11324:123;11484:2;11480;11476:11;11470:18;11512:2;11540:49;11556:32;11585:2;11556:32;:::i;11540:49::-;11616:2;11609:5;11602:17;11661:7;11655:3;11650:2;11646;11642:11;11638:21;11635:34;11632:127;;;11711:1;11741:3;11736;11729:16;11632:127;11772:68;11837:2;11832;11825:5;11821:14;11815:3;11811:2;11807:12;11772:68;:::i;:::-;11853:18;;-1:-1:-1;;;11080:12:35;;;;11891;;;;11047:866;;;11932:5;10266:1677;-1:-1:-1;;;;;;;;;10266:1677:35:o;15985:127::-;16046:10;16041:3;16037:20;16034:1;16027:31;16077:4;16074:1;16067:15;16101:4;16098:1;16091:15",
    "linkReferences": {},
    "immutableReferences": {
      "26766": [
        {
          "start": 2840,
          "length": 32
        }
      ],
      "26768": [
        {
          "start": 2798,
          "length": 32
        }
      ],
      "26770": [
        {
          "start": 2756,
          "length": 32
        }
      ],
      "26772": [
        {
          "start": 2923,
          "length": 32
        }
      ],
      "26774": [
        {
          "start": 2960,
          "length": 32
        }
      ],
      "26776": [
        {
          "start": 2881,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "eip712TransalatorContract()": "e22e7c9c",
    "evalEIP712Buffer(bytes32,string,bytes)": "b9c1bd58",
    "increaseAllowance(address,uint256)": "39509351",
    "mintToCaller()": "49d64dc1",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferWithSig(address,address,uint256,uint256,uint8,bytes32,bytes32)": "91c0189b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eip712Transaltor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712TransalatorContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"primaryType\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"}],\"name\":\"evalEIP712Buffer\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintToCaller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"r\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"v\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"transferWithSig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MyToken/MyToken.sol\":\"MyToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"src/IEvalEIP712Buffer.sol\":{\"keccak256\":\"0x551fcc2ad34db67a1b2a943a8a352fca24699eeea8e844da3d777e7a6d9a51b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99b21e50853a59ffe9bc717f2ba1237950bb75eed1dcee6ac3590262580b4509\",\"dweb:/ipfs/QmPmcwdm6Xg6W6aRs7SSQsC3PL7q19FkszeHbkL6cHvtHb\"]},\"src/MyToken/MyToken.sol\":{\"keccak256\":\"0x848eb23ba957313b1b1fa0bcf5781d75447bda8ff8cae138274f3d802870f50a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a542fe376357aa1c400c1efc838d7b17e0acaad634bf5e056e043661786ab228\",\"dweb:/ipfs/QmR2pZpCBuBarrjZocf4Kc36C6xW6hcjGzt1WkG5KRvJuE\"]},\"src/MyToken/MyToken712ParserHelper.sol\":{\"keccak256\":\"0x421db69e7549b984d952946e9f6ce47bec0d1215e959179a69847afb77842079\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5beeeebb3b5eb4f1ffdf8d4252102373e8ddeaf49fc3f72754e934f31d9b71c\",\"dweb:/ipfs/QmZS5DEP1Gx9h6U6C6HC1kgRK4Pr291RiEuAYX9oc7wRWT\"]},\"src/MyToken/MyTokenStructs.sol\":{\"keccak256\":\"0xde5e1ea299b1d7eba67af677695439083cc72215d7fa65cf649fd3745f1ab4c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5edb98f335e90ba4a016491e8167dfde4b7cbdda881d3b6bf086dcf3c3a60f57\",\"dweb:/ipfs/QmSo3KzDgZP28wSUr2mUJV3W5birytyhPxgJfG4noc2ou9\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_eip712Transaltor",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eip712TransalatorContract",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "domainSeparator",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "primaryType",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "encodedData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "evalEIP712Buffer",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintToCaller"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "r",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "v",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferWithSig"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/MyToken/MyToken.sol": "MyToken"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba",
        "urls": [
          "bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb",
          "dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a",
        "urls": [
          "bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f",
          "dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "src/IEvalEIP712Buffer.sol": {
        "keccak256": "0x551fcc2ad34db67a1b2a943a8a352fca24699eeea8e844da3d777e7a6d9a51b3",
        "urls": [
          "bzz-raw://99b21e50853a59ffe9bc717f2ba1237950bb75eed1dcee6ac3590262580b4509",
          "dweb:/ipfs/QmPmcwdm6Xg6W6aRs7SSQsC3PL7q19FkszeHbkL6cHvtHb"
        ],
        "license": "MIT"
      },
      "src/MyToken/MyToken.sol": {
        "keccak256": "0x848eb23ba957313b1b1fa0bcf5781d75447bda8ff8cae138274f3d802870f50a",
        "urls": [
          "bzz-raw://a542fe376357aa1c400c1efc838d7b17e0acaad634bf5e056e043661786ab228",
          "dweb:/ipfs/QmR2pZpCBuBarrjZocf4Kc36C6xW6hcjGzt1WkG5KRvJuE"
        ],
        "license": "MIT"
      },
      "src/MyToken/MyToken712ParserHelper.sol": {
        "keccak256": "0x421db69e7549b984d952946e9f6ce47bec0d1215e959179a69847afb77842079",
        "urls": [
          "bzz-raw://a5beeeebb3b5eb4f1ffdf8d4252102373e8ddeaf49fc3f72754e934f31d9b71c",
          "dweb:/ipfs/QmZS5DEP1Gx9h6U6C6HC1kgRK4Pr291RiEuAYX9oc7wRWT"
        ],
        "license": "MIT"
      },
      "src/MyToken/MyTokenStructs.sol": {
        "keccak256": "0xde5e1ea299b1d7eba67af677695439083cc72215d7fa65cf649fd3745f1ab4c4",
        "urls": [
          "bzz-raw://5edb98f335e90ba4a016491e8167dfde4b7cbdda881d3b6bf086dcf3c3a60f57",
          "dweb:/ipfs/QmSo3KzDgZP28wSUr2mUJV3W5birytyhPxgJfG4noc2ou9"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/MyToken/MyToken.sol",
    "id": 28049,
    "exportedSymbols": {
      "Context": [
        26224
      ],
      "ECDSA": [
        26760
      ],
      "EIP712": [
        26914
      ],
      "ERC20": [
        26099
      ],
      "IERC20": [
        26177
      ],
      "IERC20Metadata": [
        26202
      ],
      "IEvalEIP712Buffer": [
        27841
      ],
      "Math": [
        27779
      ],
      "MyToken": [
        28048
      ],
      "MyToken712ParserHelper": [
        28137
      ],
      "Strings": [
        26399
      ],
      "TransferParameters": [
        28150
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2558:25",
    "nodes": [
      {
        "id": 27843,
        "nodeType": "PragmaDirective",
        "src": "32:24:25",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 27844,
        "nodeType": "ImportDirective",
        "src": "58:55:25",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28049,
        "sourceUnit": 26100,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 27845,
        "nodeType": "ImportDirective",
        "src": "114:63:25",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28049,
        "sourceUnit": 26915,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 27846,
        "nodeType": "ImportDirective",
        "src": "178:62:25",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28049,
        "sourceUnit": 26761,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 27848,
        "nodeType": "ImportDirective",
        "src": "241:59:25",
        "nodes": [],
        "absolutePath": "src/IEvalEIP712Buffer.sol",
        "file": "../IEvalEIP712Buffer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28049,
        "sourceUnit": 27842,
        "symbolAliases": [
          {
            "foreign": {
              "id": 27847,
              "name": "IEvalEIP712Buffer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 27841,
              "src": "249:17:25",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 27850,
        "nodeType": "ImportDirective",
        "src": "301:68:25",
        "nodes": [],
        "absolutePath": "src/MyToken/MyToken712ParserHelper.sol",
        "file": "./MyToken712ParserHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28049,
        "sourceUnit": 28138,
        "symbolAliases": [
          {
            "foreign": {
              "id": 27849,
              "name": "MyToken712ParserHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28137,
              "src": "309:22:25",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 27852,
        "nodeType": "ImportDirective",
        "src": "370:56:25",
        "nodes": [],
        "absolutePath": "src/MyToken/MyTokenStructs.sol",
        "file": "./MyTokenStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28049,
        "sourceUnit": 28151,
        "symbolAliases": [
          {
            "foreign": {
              "id": 27851,
              "name": "TransferParameters",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28150,
              "src": "378:18:25",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 28048,
        "nodeType": "ContractDefinition",
        "src": "428:2161:25",
        "nodes": [
          {
            "id": 27862,
            "nodeType": "VariableDeclaration",
            "src": "487:43:25",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_nonces",
            "nameLocation": "523:7:25",
            "scope": 28048,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 27861,
              "keyType": {
                "id": 27859,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "495:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "487:27:25",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 27860,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "506:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 27864,
            "nodeType": "VariableDeclaration",
            "src": "536:40:25",
            "nodes": [],
            "constant": false,
            "functionSelector": "e22e7c9c",
            "mutability": "mutable",
            "name": "eip712TransalatorContract",
            "nameLocation": "551:25:25",
            "scope": 28048,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 27863,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "536:7:25",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 27869,
            "nodeType": "VariableDeclaration",
            "src": "583:140:25",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "TYPE_HASH",
            "nameLocation": "608:9:25",
            "scope": 28048,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 27865,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "583:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                  "id": 27867,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "638:84:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                    "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                  },
                  "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                    "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                  }
                ],
                "id": 27866,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "628:9:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 27868,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "628:95:25",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 27874,
            "nodeType": "VariableDeclaration",
            "src": "730:145:25",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "TRANSFER_TYPEHASH",
            "nameLocation": "755:17:25",
            "scope": 28048,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 27870,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "730:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5472616e7366657228616464726573732066726f6d2c6164647265737320746f2c75696e7432353620616d6f756e742c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
                  "id": 27872,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "793:81:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_4144f681a2e4d6d2035dcbc0720f95d08cc1779083c71290e8a4bb4c1529f59e",
                    "typeString": "literal_string \"Transfer(address from,address to,uint256 amount,uint256 nonce,uint256 deadline)\""
                  },
                  "value": "Transfer(address from,address to,uint256 amount,uint256 nonce,uint256 deadline)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_4144f681a2e4d6d2035dcbc0720f95d08cc1779083c71290e8a4bb4c1529f59e",
                    "typeString": "literal_string \"Transfer(address from,address to,uint256 amount,uint256 nonce,uint256 deadline)\""
                  }
                ],
                "id": 27871,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "783:9:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 27873,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "783:92:25",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 27898,
            "nodeType": "FunctionDefinition",
            "src": "882:180:25",
            "nodes": [],
            "body": {
              "id": 27897,
              "nodeType": "Block",
              "src": "967:95:25",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 27889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 27887,
                      "name": "eip712TransalatorContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27864,
                      "src": "977:25:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 27888,
                      "name": "_eip712Transaltor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27876,
                      "src": "1005:17:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "977:45:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 27890,
                  "nodeType": "ExpressionStatement",
                  "src": "977:45:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 27892,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1038:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 27893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1042:6:25",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1038:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 27894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1050:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 27891,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25916,
                      "src": "1032:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 27895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1032:23:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27896,
                  "nodeType": "ExpressionStatement",
                  "src": "1032:23:25"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4d79546f6b656e",
                    "id": 27879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "927:9:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
                      "typeString": "literal_string \"MyToken\""
                    },
                    "value": "MyToken"
                  },
                  {
                    "hexValue": "4d54",
                    "id": 27880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "938:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5b3fa69ad8a0666e5be827c0e18983e3cd29364bca2f1d8ae5b20eac8ce61c0d",
                      "typeString": "literal_string \"MT\""
                    },
                    "value": "MT"
                  }
                ],
                "id": 27881,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 27878,
                  "name": "ERC20",
                  "nameLocations": [
                    "921:5:25"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26099,
                  "src": "921:5:25"
                },
                "nodeType": "ModifierInvocation",
                "src": "921:22:25"
              },
              {
                "arguments": [
                  {
                    "hexValue": "4d79546f6b656e",
                    "id": 27883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "951:9:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
                      "typeString": "literal_string \"MyToken\""
                    },
                    "value": "MyToken"
                  },
                  {
                    "hexValue": "31",
                    "id": 27884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "962:3:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                      "typeString": "literal_string \"1\""
                    },
                    "value": "1"
                  }
                ],
                "id": 27885,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 27882,
                  "name": "EIP712",
                  "nameLocations": [
                    "944:6:25"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26914,
                  "src": "944:6:25"
                },
                "nodeType": "ModifierInvocation",
                "src": "944:22:25"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 27877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27876,
                  "mutability": "mutable",
                  "name": "_eip712Transaltor",
                  "nameLocation": "902:17:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 27898,
                  "src": "894:25:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27875,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "894:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "893:27:25"
            },
            "returnParameters": {
              "id": 27886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "967:0:25"
            },
            "scope": 28048,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27908,
            "nodeType": "FunctionDefinition",
            "src": "1068:71:25",
            "nodes": [],
            "body": {
              "id": 27907,
              "nodeType": "Block",
              "src": "1099:40:25",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 27902,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1115:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 27903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1119:6:25",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1115:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 27904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1127:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 27901,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25916,
                      "src": "1109:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 27905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1109:23:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27906,
                  "nodeType": "ExpressionStatement",
                  "src": "1109:23:25"
                }
              ]
            },
            "functionSelector": "49d64dc1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintToCaller",
            "nameLocation": "1077:12:25",
            "parameters": {
              "id": 27899,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1089:2:25"
            },
            "returnParameters": {
              "id": 27900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1099:0:25"
            },
            "scope": 28048,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27920,
            "nodeType": "FunctionDefinition",
            "src": "1145:99:25",
            "nodes": [],
            "body": {
              "id": 27919,
              "nodeType": "Block",
              "src": "1206:38:25",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 27915,
                      "name": "_nonces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27862,
                      "src": "1223:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 27917,
                    "indexExpression": {
                      "id": 27916,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27910,
                      "src": "1231:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1223:14:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 27914,
                  "id": 27918,
                  "nodeType": "Return",
                  "src": "1216:21:25"
                }
              ]
            },
            "functionSelector": "7ecebe00",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nonces",
            "nameLocation": "1154:6:25",
            "parameters": {
              "id": 27911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27910,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1169:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 27920,
                  "src": "1161:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27909,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1160:15:25"
            },
            "returnParameters": {
              "id": 27914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27913,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27920,
                  "src": "1197:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1197:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1196:9:25"
            },
            "scope": 28048,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27992,
            "nodeType": "FunctionDefinition",
            "src": "1250:693:25",
            "nodes": [],
            "body": {
              "id": 27991,
              "nodeType": "Block",
              "src": "1385:558:25",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 27938,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1403:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 27939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1409:9:25",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1403:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 27940,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27928,
                          "src": "1422:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1403:27:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e736665725369673a206578706972656420646561646c696e65",
                        "id": 27942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1432:31:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72c31fb36ca48dc496ad2359c08ef7f33ff3f2c463533ed5eb57c17675a3089f",
                          "typeString": "literal_string \"TransferSig: expired deadline\""
                        },
                        "value": "TransferSig: expired deadline"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72c31fb36ca48dc496ad2359c08ef7f33ff3f2c463533ed5eb57c17675a3089f",
                          "typeString": "literal_string \"TransferSig: expired deadline\""
                        }
                      ],
                      "id": 27937,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1395:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1395:69:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27944,
                  "nodeType": "ExpressionStatement",
                  "src": "1395:69:25"
                },
                {
                  "assignments": [
                    27946
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27946,
                      "mutability": "mutable",
                      "name": "structHash",
                      "nameLocation": "1482:10:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 27991,
                      "src": "1474:18:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 27945,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1474:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27961,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27950,
                            "name": "TRANSFER_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27874,
                            "src": "1516:17:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 27951,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27922,
                            "src": "1535:4:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 27952,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27924,
                            "src": "1541:2:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 27953,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27926,
                            "src": "1545:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 27957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "1553:15:25",
                            "subExpression": {
                              "baseExpression": {
                                "id": 27954,
                                "name": "_nonces",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27862,
                                "src": "1553:7:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 27956,
                              "indexExpression": {
                                "id": 27955,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27922,
                                "src": "1561:4:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "1553:13:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 27958,
                            "name": "deadline",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27928,
                            "src": "1570:8:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 27948,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1505:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 27949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1509:6:25",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1505:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 27959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1505:74:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 27947,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1495:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 27960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1495:85:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1474:106:25"
                },
                {
                  "assignments": [
                    27963
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27963,
                      "mutability": "mutable",
                      "name": "hash",
                      "nameLocation": "1747:4:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 27991,
                      "src": "1739:12:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 27962,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1739:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27967,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 27965,
                        "name": "structHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27946,
                        "src": "1771:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 27964,
                      "name": "_hashTypedDataV4",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26913,
                      "src": "1754:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) view returns (bytes32)"
                      }
                    },
                    "id": 27966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1754:28:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1739:43:25"
                },
                {
                  "assignments": [
                    27969
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27969,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "1800:6:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 27991,
                      "src": "1792:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 27968,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1792:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27977,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 27972,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27963,
                        "src": "1823:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 27973,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27930,
                        "src": "1829:1:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 27974,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27932,
                        "src": "1832:1:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 27975,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27934,
                        "src": "1835:1:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 27970,
                        "name": "ECDSA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26760,
                        "src": "1809:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ECDSA_$26760_$",
                          "typeString": "type(library ECDSA)"
                        }
                      },
                      "id": 27971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1815:7:25",
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26700,
                      "src": "1809:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 27976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1809:28:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1792:45:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 27981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 27979,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27969,
                          "src": "1855:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 27980,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27922,
                          "src": "1865:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1855:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e736665725369673a20756e617574686f72697a6564",
                        "id": 27982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1871:27:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29d79d2c70b52f1d5a4278597f38daeaa450bdaded9fe55e6bf6bb824efeaedf",
                          "typeString": "literal_string \"TransferSig: unauthorized\""
                        },
                        "value": "TransferSig: unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29d79d2c70b52f1d5a4278597f38daeaa450bdaded9fe55e6bf6bb824efeaedf",
                          "typeString": "literal_string \"TransferSig: unauthorized\""
                        }
                      ],
                      "id": 27978,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1847:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1847:52:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27984,
                  "nodeType": "ExpressionStatement",
                  "src": "1847:52:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27986,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27922,
                        "src": "1919:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 27987,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27924,
                        "src": "1925:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 27988,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27926,
                        "src": "1929:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27985,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25859,
                      "src": "1909:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 27989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1909:27:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27990,
                  "nodeType": "ExpressionStatement",
                  "src": "1909:27:25"
                }
              ]
            },
            "functionSelector": "91c0189b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferWithSig",
            "nameLocation": "1259:15:25",
            "parameters": {
              "id": 27935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27922,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1283:4:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 27992,
                  "src": "1275:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27921,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1275:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27924,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1297:2:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 27992,
                  "src": "1289:10:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1289:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27926,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1309:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 27992,
                  "src": "1301:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27925,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1301:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27928,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "1325:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 27992,
                  "src": "1317:16:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27927,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1317:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27930,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "1341:1:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 27992,
                  "src": "1335:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 27929,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27932,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "1352:1:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 27992,
                  "src": "1344:9:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27931,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1344:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27934,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "1363:1:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 27992,
                  "src": "1355:9:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27933,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1355:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1274:91:25"
            },
            "returnParameters": {
              "id": 27936,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1385:0:25"
            },
            "scope": 28048,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28001,
            "nodeType": "FunctionDefinition",
            "src": "1949:102:25",
            "nodes": [],
            "body": {
              "id": 28000,
              "nodeType": "Block",
              "src": "2007:44:25",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 27997,
                      "name": "_domainSeparatorV4",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26870,
                      "src": "2024:18:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view returns (bytes32)"
                      }
                    },
                    "id": 27998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2024:20:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 27996,
                  "id": 27999,
                  "nodeType": "Return",
                  "src": "2017:27:25"
                }
              ]
            },
            "functionSelector": "3644e515",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "DOMAIN_SEPARATOR",
            "nameLocation": "1958:16:25",
            "parameters": {
              "id": 27993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1974:2:25"
            },
            "returnParameters": {
              "id": 27996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27995,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28001,
                  "src": "1998:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27994,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1998:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1997:9:25"
            },
            "scope": 28048,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28047,
            "nodeType": "FunctionDefinition",
            "src": "2057:530:25",
            "nodes": [],
            "body": {
              "id": 28046,
              "nodeType": "Block",
              "src": "2238:349:25",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 28027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 28018,
                                  "name": "primaryType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28005,
                                  "src": "2296:11:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 28016,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2279:3:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 28017,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2283:12:25",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "2279:16:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 28019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2279:29:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 28015,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "2269:9:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 28020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2269:40:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "5472616e73666572",
                                  "id": 28024,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2340:10:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_f099cd8bde557814842a3121e8ddfd433a539b8c9f14bf31ebf108d12e6196e9",
                                    "typeString": "literal_string \"Transfer\""
                                  },
                                  "value": "Transfer"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_f099cd8bde557814842a3121e8ddfd433a539b8c9f14bf31ebf108d12e6196e9",
                                    "typeString": "literal_string \"Transfer\""
                                  }
                                ],
                                "expression": {
                                  "id": 28022,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2323:3:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 28023,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2327:12:25",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "2323:16:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 28025,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2323:28:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 28021,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "2313:9:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 28026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2313:39:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "2269:83:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d79546f6b656e3a20696e76616c6964207072696d6172792074797065",
                        "id": 28028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2366:31:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84a564a6f7df59bc99c1a112501926ece6acd6c5b4d4fb571be638649bfb3e1b",
                          "typeString": "literal_string \"MyToken: invalid primary type\""
                        },
                        "value": "MyToken: invalid primary type"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84a564a6f7df59bc99c1a112501926ece6acd6c5b4d4fb571be638649bfb3e1b",
                          "typeString": "literal_string \"MyToken: invalid primary type\""
                        }
                      ],
                      "id": 28014,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2248:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2248:159:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28030,
                  "nodeType": "ExpressionStatement",
                  "src": "2248:159:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 28035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 28032,
                          "name": "domainSeparator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28003,
                          "src": "2425:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 28033,
                            "name": "_domainSeparatorV4",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26870,
                            "src": "2444:18:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                              "typeString": "function () view returns (bytes32)"
                            }
                          },
                          "id": 28034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2444:20:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "2425:39:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d79546f6b656e3a20496e76616c696420646f6d61696e",
                        "id": 28036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2466:25:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b2eed33b9251a8db27a0b15c535a21503a8ba233f5ac3f4e2a03f4b87a63a999",
                          "typeString": "literal_string \"MyToken: Invalid domain\""
                        },
                        "value": "MyToken: Invalid domain"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b2eed33b9251a8db27a0b15c535a21503a8ba233f5ac3f4e2a03f4b87a63a999",
                          "typeString": "literal_string \"MyToken: Invalid domain\""
                        }
                      ],
                      "id": 28031,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2417:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2417:75:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28038,
                  "nodeType": "ExpressionStatement",
                  "src": "2417:75:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28043,
                        "name": "encodedData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28007,
                        "src": "2568:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 28040,
                            "name": "eip712TransalatorContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27864,
                            "src": "2532:25:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 28039,
                          "name": "MyToken712ParserHelper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28137,
                          "src": "2509:22:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_MyToken712ParserHelper_$28137_$",
                            "typeString": "type(contract MyToken712ParserHelper)"
                          }
                        },
                        "id": 28041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2509:49:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MyToken712ParserHelper_$28137",
                          "typeString": "contract MyToken712ParserHelper"
                        }
                      },
                      "id": 28042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2559:8:25",
                      "memberName": "parseSig",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28136,
                      "src": "2509:58:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes_memory_ptr_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory) view external returns (string memory[] memory)"
                      }
                    },
                    "id": 28044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2509:71:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 28013,
                  "id": 28045,
                  "nodeType": "Return",
                  "src": "2502:78:25"
                }
              ]
            },
            "baseFunctions": [
              27840
            ],
            "functionSelector": "b9c1bd58",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "evalEIP712Buffer",
            "nameLocation": "2066:16:25",
            "overrides": {
              "id": 28009,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2203:8:25"
            },
            "parameters": {
              "id": 28008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28003,
                  "mutability": "mutable",
                  "name": "domainSeparator",
                  "nameLocation": "2100:15:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 28047,
                  "src": "2092:23:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 28002,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2092:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28005,
                  "mutability": "mutable",
                  "name": "primaryType",
                  "nameLocation": "2139:11:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 28047,
                  "src": "2125:25:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28004,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2125:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28007,
                  "mutability": "mutable",
                  "name": "encodedData",
                  "nameLocation": "2173:11:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 28047,
                  "src": "2160:24:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 28006,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2160:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2082:108:25"
            },
            "returnParameters": {
              "id": 28013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28012,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28047,
                  "src": "2221:15:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 28010,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "2221:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 28011,
                    "nodeType": "ArrayTypeName",
                    "src": "2221:8:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2220:17:25"
            },
            "scope": 28048,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 27853,
              "name": "ERC20",
              "nameLocations": [
                "448:5:25"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26099,
              "src": "448:5:25"
            },
            "id": 27854,
            "nodeType": "InheritanceSpecifier",
            "src": "448:5:25"
          },
          {
            "baseName": {
              "id": 27855,
              "name": "EIP712",
              "nameLocations": [
                "455:6:25"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26914,
              "src": "455:6:25"
            },
            "id": 27856,
            "nodeType": "InheritanceSpecifier",
            "src": "455:6:25"
          },
          {
            "baseName": {
              "id": 27857,
              "name": "IEvalEIP712Buffer",
              "nameLocations": [
                "463:17:25"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27841,
              "src": "463:17:25"
            },
            "id": 27858,
            "nodeType": "InheritanceSpecifier",
            "src": "463:17:25"
          }
        ],
        "canonicalName": "MyToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          28048,
          27841,
          26914,
          26099,
          26202,
          26177,
          26224
        ],
        "name": "MyToken",
        "nameLocation": "437:7:25",
        "scope": 28049,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 25
}